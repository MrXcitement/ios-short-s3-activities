# dev (microservice) environment
WEB_DOCKERFILE=Dockerfile-web
WEB_IMAGE=kitura-server
WEB_CONTAINER_NAME=activities-server
WEB_CONTAINER_PORT=8080
WEB_HOST_PORT=80
WEB_DOCKER_ORGANIZATION=udacity
WEB_DOCKER_REPO=$(WEB_DOCKER_ORGANIZATION)/$(WEB_CONTAINER_NAME)
VERSION ?= $(shell git rev-parse --short HEAD)

# testing
TEST_COMMAND=TEST=true swift test -Xlinker -L/usr/local/lib

# =============================
# Web (Microservice) Container
# =============================
web_dev:
	docker run --name $(WEB_CONTAINER_NAME) \
	-it --rm -v $(PWD):/src \
	-w /src \
	-e MYSQL_HOST=$(DB_HOST) \
	-e MYSQL_PORT=$(DB_PORT) \
	-e MYSQL_USER=$(DB_USER) \
	-e MYSQL_PASSWORD=$(DB_PASSWORD) \
	-e MYSQL_DATABASE=$(DB_DATABASE) \
	-p $(WEB_HOST_PORT):$(WEB_CONTAINER_PORT) $(WEB_IMAGE) /bin/bash

web_build:
	swift build -Xlinker -L/usr/local/lib

web_build_run: web_build
	./.build/debug/ActivitiesServer

web_clean:
	rm -rf .build
	rm Package.pins

web_unit_test:
	$(TEST_COMMAND) --filter ActivitiesTests

web_functional_test:
	$(TEST_COMMAND) -s FunctionalTests.FunctionalTests

web_unit_test_docker:
	docker run -d \
		-v $(shell pwd):/src \
		--name web_unit_test \
		-w /src \
		$(WEB_IMAGE) tail -f /dev/null

	$(call execute_docker_reset_packages, web_unit_test)
	$(call execute_docker_test, web_unit_test, ActivitiesTests)

	docker stop web_unit_test
	docker rm web_unit_test

web_functional_test_docker:
	docker run --rm -v $(shell pwd):/src \
	-w /src $(WEB_IMAGE) /bin/bash -c 'TEST=true swift test --filter FunctionalTests'

# ONLY RUN ON LINUX BASED SYSTEMS
web_release_build:
	swift build \
		-Xlinker -L/usr/local/lib \
		--static-swift-stdlib \
		--product ActivitiesServer \
		-c release
	cp /usr/lib/swift/linux/*.so ./linux_shared
	docker build -t $(WEB_CONTAINER_NAME) -f Dockerfile-prod .
	docker tag $(WEB_CONTAINER_NAME) $(WEB_DOCKER_REPO):$(VERSION)
	docker tag $(WEB_CONTAINER_NAME) $(WEB_DOCKER_REPO):latest

define execute_docker_reset_packages
	trap 'docker exec -it $(1) \
			/bin/bash -c "swift package reset"' \
		ERR EXIT
endef

# Make function to execute swift test in docker
define execute_docker_test
	trap 'docker exec -it $(1) \
			/bin/bash -c "$(TEST_COMMAND) --filter $(2)"' \
		ERR EXIT
endef
